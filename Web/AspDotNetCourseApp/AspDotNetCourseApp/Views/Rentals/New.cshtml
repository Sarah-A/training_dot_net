
@{
	ViewBag.Title = "New";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Rental Form</h2>

<form id="newRental">
	<div class="form-group">
		<label for="customer">Customer</label>
		<div class="tt-container">
			<input type="text" id="customer" name="customer" data-rule-validCustomer="true" value="" class="form-control" required/>
		</div>
	</div>

	<div class="form-group">
		<label for="movie">Movie</label>
		<div class="tt-container">
			<input type="text" id="movie" name="movie" data-rule-atLeastOneMovie="true" value="" class="form-control" />
		</div>
	</div>

	<ul id="movies"  class="list-group"></ul>

	<button type="submit" class="btn btn-primary">Submit</button>

</form>

@section scripts
{
	@Scripts.Render("~/bundles/jqueryval")

	<script>
		$(document).ready(function () {
			var vm = {
				movieIds: []
			};

			// Bloodhound is the
			var customers = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),	// tokenize customer.Name
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				remote: {
					url: '../api/customers?filterForRenting=%QUERY',		// the user input will be put into $QUERY
					wildcard: '%QUERY'
				}
			});

			$('#customer')
				.typeahead({
					minLength: 3,
					highlight: true
				},
					{
						name: 'customers',			//
						display: 'name',			// will display customer.name in the suggestion list
						source: customers			// the new Bloodhound object defined at the top.
					})
				.on("typeahead:select", function (e, customer) {
					vm.customerId = customer.id;
					//console.log(`${customer.name} - ${customer.id}`);
				});

			// Bloodhound is the
			var movies = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),	// tokenize movie.Name
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				remote: {
					url: '../api/movies?filterForRenting=%QUERY',		// the user input will be put into $QUERY
					wildcard: '%QUERY'
				}
			});

			$('#movie')
				.typeahead({
					minLength: 3,
					highlight: true
				},
					{
						name: 'movies',			//
						display: 'name',			// will display customer.name in the suggestion list
						source: movies			// the new Bloodhound object defined at the top.
					})
				.on("typeahead:select", function (e, movie) {
					vm.movieIds.push(movie.id);

					$("#movies").append(`<li class="list-group-item">${movie.name}</li>`);
					// clear the content of the text box after the selection.
					// we need to use typeahead isntead of the jquery .val() function since typeahead is
					// now controling the text box value:
					$("#movie").typeahead("val", "");


				});

			$.validator.addMethod("atLeastOneMovie", function () {
				return vm.movieIds.length > 0;
			}, "Please select at least one movie to rent");

			// custom validator for the #customer field. We plug it into the html by using the 
			// data-rule-<function name>="true" attribute on the text box. This tells JQuery to 
			// run this function in order to validate this field.
			$.validator.addMethod("validCustomer", function () {
				return vm.customerId && vm.customerId != 0;
			}, "Please select a valid customer.");

			// plug validation into the form:
			let validator = $("#newRental").validate({
				submitHandler: function () {

					$.ajax({
						url: "/api/Rentals",
						method: "POST",
						data: vm
					})
						.done(function () {
							toastr.success("Rental Created Successfully!!");

							// reset form:
							$("#customer").typeahead("val", "");
							$("#movie").typeahead("val", "");
							$("#movies").empty();
							vm = { movieIds: [] };
							validator.resetForm();

						})
						.fail(function () {
							toastr.error("Failed to create new rental!!");
						});

					// to prevent JQuery from sumbitting the form again
					// (already submitted through the ajax call):
					return false;
				}
			});

			

		});
	</script>
}


